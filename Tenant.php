<?php

namespace app\nadmin\controller;

use think\Db;
use think\Request;

class Tenant extends Common
{
    public $model_name = 'tenant';

    public function index()
    {
        $this->request->get(['uid' => $this->uid]);
        return parent::index(); // TODO: Change the autogenerated stub
    }

    public function tenantImport(Request $request)
    {
        $user = model('User');
        $area_id = $user->getUserAreaId($this->uid);
        $res = importTenant($area_id, $this->uid);
        if ($res && $res['status'] == '1') {
            return returnMessage(200, $res['message'], $res['result']);
        } else {
            return returnMessage(500, $res['message'], $res['result']);
        }

        // 查询无租客房子
        // $check = Db::name('renthouse_new_house')
        //     ->join('renthouse_new_landlord', 'renthouse_new_landlord.id = renthouse_new_house.landlord_id', 'left')
        //     ->where([
        //         'area_id' => 41,
        //         'role' => 0,
        //         'renthouse_new_landlord.status' => 1,
        //         'renthouse_new_house.status' => 1,
        //     ])
        //     ->field('renthouse_new_house.id, renthouse_new_house.address')
        //     ->select();
        // $arr = [];
        // foreach ($check as $key => $value) {
        //     $check[$key]['tenant_ids'] = Db::name('renthouse_new_tenant')->where(['house_id' => $check[$key]['id']])->column('id');
        //     if (count($check[$key]['tenant_ids']) == 0) {
        //         $arr[] = $check[$key]['address'];
        //     }
        // }
        // print_r($arr);
        // exit;


        // 删除操作日志
        // $arr = Db::name('renthouse_new_tenant')
        //     ->where([
        //         'status' => ['>', -1]
        //     ])
        //     ->column('id');

        // $res = Db::name('renthouse_new_statistics')
        //     ->where([
        //         'renthouse_new_statistics.controller' => 'Tenant',
        //         // 'area_id' => 41,
        //         'sub_id' => ['not in', $arr]
        //     ])
        //     // ->field('renthouse_new_statistics.id, renthouse_new_statistics.sub_id')
        //     ->delete();
        // print_r($res);
        // exit;


        //删除广东省佛山市
        // $arr = Db::name('renthouse_new_house')
        //     ->join('renthouse_new_landlord', 'renthouse_new_landlord.id = renthouse_new_house.landlord_id', 'left')
        //     ->where([
        //         'renthouse_new_house.address' => ['like', '%佛山市%'],
        //         'area_id' => 41
        //     ])
        //     ->field('renthouse_new_house.id, renthouse_new_house.address')
        //     ->select();
        //     foreach ($arr as $key => $val) {
        //         $arr[$key]['new_address'] = explode("佛山市", $arr[$key]['address'])[1];
        //         Db::name('renthouse_new_house')->where(['id' => $arr[$key]['id']])->update(['address' => $arr[$key]['new_address']]);
        //     }
        // print_r($arr);
        // exit;

        // 补充添加网格员
        // $house = Db::name('renthouse_new_house')
        //     ->join('renthouse_new_landlord', 'renthouse_new_landlord.id = renthouse_new_house.landlord_id', 'left')
        //     ->where([
        //         'area_id' => 41,
        //         'renthouse_new_house.status' => 1,
        //         'renthouse_new_landlord.status' => 1,
        //     ])
        //     ->column('renthouse_new_house.id');
        // foreach($house as $key => $val) {
        //     $check = Db::name('renthouse_new_grid_house')->where(['grid_id' => 823, 'house_id' => $house[$key]])->find();
        //     if (!$check) {
        //         Db::name('renthouse_new_grid_house')->insert(['grid_id' => 823, 'house_id' => $house[$key]]);
        //     }
        // }
        // $count = count($house);
        // print_r($house);
        // exit;
    }
}
